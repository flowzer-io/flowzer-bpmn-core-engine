@page "/formioViewer"
@layout EmptyLayout


<head>
    <link rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css'>
    <link rel='stylesheet' href='https://cdn.form.io/formiojs/formio.full.min.css'>
</head>



<div>
    <div id='form'></div>
</div>


<script>
    window.Formio = Formio;


    function loadViewer(schema) {
        const options = {
            // >>> Hier erlaubst du iframe/embed/object + relevante Attribute <<<
            sanitizeConfig: {
                // Erlaube die Tags
                allowedTags: ['iframe', 'embed', 'object'],
                addTags: ['iframe', 'embed', 'object'],
                // Erlaube benötigte Attribute (src, type, Größen, usw.)
                allowedAttrs: [
                    'src', 'type', 'width', 'height', 'style',
                    'frameborder', 'allow', 'allowfullscreen',
                    'ref', 'data-oembed-url'
                ],
                addAttr: ['allow', 'allowfullscreen', 'frameborder', 'data-oembed-url']
                // Optional: Wenn deine src-URLs geblockt werden, kannst du
                // DOMPurify-RegEx für erlaubte Protokolle setzen (nur wenn nötig):
                // ALLOWED_URI_REGEXP: /^(?:(?:https?|data):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
            }
        };

        Formio.createForm(document.getElementById('form'), schema, options)
            .then((form) => {
                window.formViewer = form;
                form.on('change', function () {
                    window.parent.postMessage({ type: "event", eventTyp: "formChanged" }, '*');
                });
            });
    }

    function setSubmission(data)
    {
        console.log("got setSubmission from dotnet");
        window.formViewer.submission.data = data;
        window.formViewer.redraw();
    }

    function getSubmission()
    {
        return window.formViewer.submission.data;
    }


    function IsReady(){
        return  window.Formio !== undefined;
    }

    if (!window.messageHandlerSet) {
        window.addEventListener('message', async function(event) {
            console.log("Executing " + event.data.func + " " + JSON.stringify(event.data.arguments)); // Message received from child
            let ret = callFunctionWithoutCaching(event.data.func, ...event.data.arguments);

            // Check if ret is a Promise
            if (ret instanceof Promise) {
                ret = await ret;
            }

            window.parent.postMessage({ret: ret, type: "response"}, '*');
        });
        window.messageHandlerSet = true;
    }

    console.log("Formio Viewer loaded");
</script>

